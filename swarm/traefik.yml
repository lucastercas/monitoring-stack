version: "3.7"

services:
  traefik:
    image: traefik:v2.3
    restart: unless-stopped
    networks:
      - traefik-public
    command:
      - --api.insecure=true # Set to false on production
      - --api.dashboard=true
      - --api.debug=true
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik-public
      - --entrypoints.web.address=:80
      - --entrypoints.web-secured.address=:443
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.api.rule=Host(`${traefik-host}`)
        # Let the dashboard access the traefik api
        - traefik.http.routers.api.service=api@internal
        - traefik.http.services.api.loadbalancer.server.port=80
      resources:
        limits:
          memory: 1024M
          cpus: "1"

networks:
  traefik-public:
    external: true